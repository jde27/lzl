lzl (lazy latex) is a simple markup designed with two purposes in
mind:

1. to reduce the amount you need to type into a LaTeX file,

2. to allow export to other formats such as HTML.

Call it with

$ lzl.py filename tex [article|book|...]

or

$ lzl.py filename html

The syntax of Lazy LaTeX (lzl) is very simple. You mostly just write
in LaTeX, except for a few shortcuts. Obviously if you try and export
some fancy LaTeX to HTML it will fail, but basic input should
translate into HTML (including equations).

There is an example input file (01_matrices.lzl) in the repository
(this makes use of the file la-head, also in the repository). Before
you run this example you should make sure you have a subdirectory to
store the images output by TikZ and change the variable img_location
in lzl.py to the relative path to this subdirectory. The default is
'./img/' but if you're not on Linux/Mac then you probably want
something with Windows-slashes i.e. \

To any Windows users:

I have succeeded in getting lzl (and other python scripts that require
arguments passing to them) to work on Windows machines, but only after
I installed Python in a specific way. Namely, on Windows 10, if you
get a cmd terminal open (e.g. press Win + R and type cmd) then type
python, it will take you to the "Microsoft Store" from which you can
install the latest version of Python. Then, back in the cmd terminal
you can just type

python lzl.py 01_matrices.lzl html

to run lzl on the example file.

If you installed Python direct from a website then I think you
probably need to play around with the path environment variable to get
this to work smoothly.



Here are some further examples of lzl syntax.

EXAMPLE 1

# Theorem thm:pythag Pythagoras's theorem
  \[a^2+b^2=c^2\]

====> LaTeX:

\begin{Theorem}[Pythagoras's theorem]
\label{thm:pythag}
\[a^2+b^2=c^2.\]
\end{Theorem}

====> HTML:

<div class="Theorem" id="thm:pythag">(Pythagoras's theorem)
\[a^2+b^2=c^2\]
</div>

(As usual, you can use any environment name you want as long as you
define it in the head of your LaTeX document or in your CSS.)

EXAMPLE 2:

! An item
  - A subitem
  - Another subitem
! Another item
  ! A numbered subitem
- An unnumbered item

====> LaTeX:

\begin{enumerate}
  \item An item
  \begin{itemize}
    \item A subitem
    \item Another subitem
  \end{itemize}
  \item Another item
  \begin{enumerate}
    \item A numbered subitem
  \end{enumerate}
\end{enumerate}
\begin{itemize}
  \item An unnumbered item
\end{itemize}

====> HTML:

<ol>
  <li>An item
  <ul>
    <li>A subitem
    <li>Another subitem
  </ul>
  <li>Another item
  <ul>
    <li>A numbered subitem
  </ul>
</ol>
<ul>
  <li>An unnumbered item
</ul>

EXAMPLE 3:

@ title The title of the document
@ author Me
@tex include aux-tex-file
@html include aux-html-file

====> LaTeX:

\title{The title of the document}
\author{Me}
\include{aux-tex-file}

====> HTML:

<title>The title of the document</title>
<meta name="author" content="Me"/>
contents of aux-html-file inserted verbatim

EXAMPLE 4:

# center
  # tikzpicture alt This is a circle and a line
    \draw (0,0) circle[radius=2];
    \draw (0,0) -- (3,2);

====> HTML:

Produces a jpg file using tikz/LaTeX and embeds it as an img with an alt tag

Note: lzl keeps writing header stuff while the first character of the
line is @. As soon as that stops, it moves on to parsing the body of
the document. To maximise readability, I put all the LaTeXy
\usepackage/\newcommand instructions in a separate file which I then
include using @tex include aux-tex-file, and all HTML head stuff like
<link rel="stylesheet"...> in a separate text file which gets includes
verbatim using @html include aux-html-file. Of course, this
aux-html-file should probably include the relevant MathJax script...
